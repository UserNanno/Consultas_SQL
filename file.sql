-- BASE DE CLIENTES QUE QUIERO BUSCAR SI TIENEN UNA TRANSACCION DE ADELANTO DE SUELDO EN LOS ULTIMOS 6 MESES DE LA FECCREACION DE MI BASE
SELECT A.CODINTERNOCOMPUTACIONAL, B.CODCLAVEPARTYCLI, A.FECCREACION, ADD_MONTHS(A.FECCREACION, -6) AS FECCREACION_6M
FROM CATALOG_LHCL_PROD_BCP.BCP_EDV_RBMBDN.T72496_BASE_CENTRALIZADO A
LEFT JOIN CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_CLIENTE B
ON UPPER(TRIM(A.CODINTERNOCOMPUTACIONAL)) = UPPER(TRIM(B.CODINTERNOCOMPUTACIONAL))
WHERE A.CODINTERNOCOMPUTACIONAL IS NOT NULL AND A.TIPPRODUCTO = 'CC' AND B.CODCLAVEPARTYCLI IS NOT NULL;

-- BASE DE TRANSACCIONES DE CUENTA SUELDO POR CLIENTES
SELECT TO_DATE(FECTRX) AS FECTRANSACCION, CODCLAVEPARTYCLI 
FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.H_TRANSACCIONADELANTOCUENTASUELDO;

-- VERIFICAR SI AL MENOS EL CLIENTE TUVO 1 TRANSACCION DE ADELANTO DE CUENTA SUELDO EN LOS ULTIMOS 6 MESES DE LA FECCREACION

WITH BASE AS (
 SELECT
     A.CODINTERNOCOMPUTACIONAL,
     B.CODCLAVEPARTYCLI,
     A.FECCREACION
 FROM CATALOG_LHCL_PROD_BCP.BCP_EDV_RBMBDN.T72496_BASE_CENTRALIZADO A
 LEFT JOIN CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_CLIENTE B
   ON UPPER(TRIM(A.CODINTERNOCOMPUTACIONAL)) = UPPER(TRIM(B.CODINTERNOCOMPUTACIONAL))
 WHERE A.CODINTERNOCOMPUTACIONAL IS NOT NULL
   AND A.TIPPRODUCTO = 'CC'
   AND B.CODCLAVEPARTYCLI IS NOT NULL
),
TRANSACCIONES_ADS AS (
 SELECT
     TO_DATE(FECTRX) AS FECTRANSACCION,
     CODCLAVEPARTYCLI
 FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.H_TRANSACCIONADELANTOCUENTASUELDO
)
SELECT
   A.CODINTERNOCOMPUTACIONAL,
   A.CODCLAVEPARTYCLI,
   A.FECCREACION,
   CASE WHEN NVL(COUNT(B.FECTRANSACCION), 0) > 0 THEN 1 ELSE 0 END AS FLG_TUVO_ADELANTO_ULT_3M,
   NVL(COUNT(B.FECTRANSACCION), 0) AS CNT_TRX_ULT_3M
FROM BASE A
LEFT JOIN TRANSACCIONES_ADS B
 ON B.CODCLAVEPARTYCLI = A.CODCLAVEPARTYCLI
AND B.FECTRANSACCION BETWEEN ADD_MONTHS(A.FECCREACION, -3)
                          AND A.FECCREACION
GROUP BY ALL;
