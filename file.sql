-- Parámetros (si quieres convertirlos a widgets):
-- -- set spark.sql.ansi.enabled = true;

WITH
-- 1) Filtro temprano + normalización de textos y timestamps
base AS (
  SELECT
    A.CODSOLICITUD,
    A.FECSOLICITUD,
    A.HORSOLICITUD,
    A.DESTIPFLUJOVENTATARJETACREDITO,
    A.DESCAMPANIA,
    -- normalizo acentos y mayúsculas para búsquedas robustas
    UPPER(TRANSLATE(A.DESCAMPANIA, 'ÁÉÍÓÚÜÑáéíóúüñ', 'AEIOUUNAEIOUUN')) AS DESCAMPANIA_N,
    A.DESPRODUCTO,
    A.TIPESTADOSOLICITUD,
    A.DESTIPETAPA,
    A.DESMOTIVOCDA,
    A.DESCOMENTARIO,
    A.NBRMONEDA,
    TRIM(A.NBRMONEDA) AS NBRMONEDA_TRIM,
    A.MTOSOLICITADO,
    A.MTOAPROBADO,
    A.FECINICIOEVALUACION,
    A.HORINICIOEVALUACION,
    A.FECFINEVALUACION,
    A.HORFINEVALUACION,
    A.FECEMISIONTARJETACREDITO,
    A.CODMATRICULACOLABORADORAPROBADOR,
    A.CODMATRICULACOLABORADORVENDEDOR,
    A.CODINTERNOCOMPUTACIONAL,
    A.CODCOLABORADORVENDEDOR,
    A.MTOCUOTAMENSUALAPROBADO,
    A.PCTTASAEFECTIVAANUALSOLICITUD,
    A.MTOINGRESOBRUTOSOLICITUD
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_SOLICITUDTARJETACREDITO A
  WHERE A.CODTIPREGAPP IN ('0126O000001xsIYQAY','0126O000001h0WaQAI','0126O000001h0WbQAI')
    AND A.FECSOLICITUD >= DATE '2025-10-01'
),
-- 2) Pre-filtrar roles para reducir cardinalidad en JOINs
titular AS (
  SELECT
    CODSOLICITUD,
    DESTIPROLSOLICITUD,
    FLGCLIPAGOHABERESBCP,
    TIPRENTA,
    NUMPUNTAJEPRECALIF,
    TIPPARTYIDENTIFICACION,
    MTOINGRESODIGITADO,
    MTOOTROINGRESODIGITADO,
    MTOINGRESOCALCULADO,
    MTOCEM,
    MTOCEMASESORVENTA,
    MTOCEMANALISTACREDITO,
    DESSUBSEGMENTO,
    CODSEGMENTORIESGOSCORE,
    DESTIPNIVELEDUCACIONAL,
    DESTIPOCUPACION,
    NUMDEPENDIENTE,
    DESTIPESTCIVIL
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_SOLICITUDINDIVIDUO
  WHERE DESTIPROLSOLICITUD = 'TITULAR'
),
conyuge AS (
  SELECT
    CODSOLICITUD,
    DESTIPROLSOLICITUD,
    TIPRENTA,
    TIPPARTYIDENTIFICACION,
    MTOINGRESODIGITADO,
    MTOOTROINGRESODIGITADO,
    MTOINGRESOCALCULADO,
    DESTIPOCUPACION
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_SOLICITUDINDIVIDUO
  WHERE DESTIPROLSOLICITUD = 'CONYUGE'
),
party_titular AS (
  SELECT
    CODSOLICITUD,
    DESTIPROLSOLICITUD,
    DESTIPCLASIFRIESGOCLI
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_SOLICITUDPARTY
  WHERE DESTIPROLSOLICITUD = 'TITULAR'
),
party_conyuge AS (
  SELECT
    CODSOLICITUD,
    DESTIPROLSOLICITUD,
    DESTIPCLASIFRIESGOCLI
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_SOLICITUDPARTY
  WHERE DESTIPROLSOLICITUD = 'CONYUGE'
),
usr AS (
  SELECT
    CODUSUARIOAPP,
    DESPOSICIONCOLABORADOR
  FROM CATALOG_LHCL_PROD_BCP.BCP_UDV_INT_VU.M_USUARIOAPLICATIVO
),
-- 3) Timestamps consistentes y métricas derivadas
tstamps AS (
  SELECT
    b.*,
    -- Timestamps completos
    TO_TIMESTAMP(CONCAT_WS(' ', b.FECSOLICITUD, LPAD(b.HORSOLICITUD, 6, '0')), 'yyyy-MM-dd HHmmss') AS FECREGISTRO,
    TO_TIMESTAMP(CONCAT_WS(' ', b.FECINICIOEVALUACION, LPAD(b.HORINICIOEVALUACION, 6, '0')), 'yyyy-MM-dd HHmmss') AS INICIOEVALUACION,
    TO_TIMESTAMP(CONCAT_WS(' ', b.FECFINEVALUACION, LPAD(b.HORFINEVALUACION, 6, '0')), 'yyyy-MM-dd HHmmss') AS FINEVALUACION
  FROM base b
),
-- 4) Enriquecimiento con individuos/party/usuario (JOINs ya filtrados)
full_joined AS (
  SELECT
    t.*,
    ti.FLGCLIPAGOHABERESBCP,
    ti.TIPRENTA AS TIPRENTA_TIT,
    co.TIPRENTA AS TIPRENTA_CONY,
    ti.NUMPUNTAJEPRECALIF,
    ti.TIPPARTYIDENTIFICACION AS TIPIDC_TIT,
    co.TIPPARTYIDENTIFICACION AS TIPIDC_CONY,
    ti.MTOINGRESODIGITADO AS ING_BRUTO_TIT,
    co.MTOINGRESODIGITADO AS ING_BRUTO_CONY,
    ti.MTOOTROINGRESODIGITADO AS OTRO_ING_BRUTO_TIT,
    co.MTOOTROINGRESODIGITADO AS OTRO_ING_BRUTO_CONY,
    ti.MTOINGRESOCALCULADO AS ING_PROM_TIT,
    co.MTOINGRESOCALCULADO AS ING_PROM_CONY,
    ti.MTOCEM AS CEM,
    ti.MTOCEMASESORVENTA AS CEM_VENDEDOR,
    ti.MTOCEMANALISTACREDITO AS CEM_ANALISTA,
    ti.DESSUBSEGMENTO AS SEGMENTO_TIT,
    ti.CODSEGMENTORIESGOSCORE AS SEG_RIESGO_TIT,
    co.DESTIPOCUPACION AS OCUP_CONY,
    ti.DESTIPNIVELEDUCACIONAL AS GRADO_INSTRUCCION,
    ti.DESTIPOCUPACION AS OCUP_TIT,
    pa_t.DESTIPCLASIFRIESGOCLI AS CLASIF_SBS_TIT,
    pa_c.DESTIPCLASIFRIESGOCLI AS CLASIF_SBS_CONY,
    ti.NUMDEPENDIENTE AS NRO_DEP_TIT,
    ti.DESTIPESTCIVIL AS ESTADO_CIVIL,
    u.DESPOSICIONCOLABORADOR AS FUNCION_VENDEDOR
  FROM tstamps t
  LEFT JOIN titular      ti   ON t.CODSOLICITUD = ti.CODSOLICITUD
  LEFT JOIN conyuge      co   ON t.CODSOLICITUD = co.CODSOLICITUD
  LEFT JOIN party_titular pa_t ON t.CODSOLICITUD = pa_t.CODSOLICITUD
  LEFT JOIN party_conyuge pa_c ON t.CODSOLICITUD = pa_c.CODSOLICITUD
  LEFT JOIN usr          u    ON t.CODCOLABORADORVENDEDOR = u.CODUSUARIOAPP
),
-- 5) Métricas monetarias y de tiempo (evitar referenciar alias en la misma proyección)
mtr AS (
  SELECT
    f.*,
    -- Conversión moneda (mantengo factor fijo 3.81 según query original)
    CASE WHEN f.NBRMONEDA_TRIM = 'DOLAR AMERICANO             EE.UU       ' THEN f.MTOSOLICITADO * 3.81
         ELSE f.MTOSOLICITADO END AS MTOSOLICITADO_SOLES,
    CASE WHEN f.NBRMONEDA_TRIM = 'DOLAR AMERICANO             EE.UU       ' THEN f.MTOAPROBADO * 3.81
         ELSE f.MTOAPROBADO END AS MTOAPROBADO_SOLES,
    -- Diferencias de tiempo en segundos/horas (unix_timestamp para robustez en Spark/DBR)
    (UNIX_TIMESTAMP(f.FINEVALUACION) - UNIX_TIMESTAMP(f.FECREGISTRO))           AS TIEMPO_CLIENTE_SEG,
    (UNIX_TIMESTAMP(f.FINEVALUACION) - UNIX_TIMESTAMP(f.INICIOEVALUACION))      AS TIEMPO_ANALISTA_SEG,
    (UNIX_TIMESTAMP(f.FINEVALUACION) - UNIX_TIMESTAMP(f.FECREGISTRO)) / 3600.0  AS TIEMPO_CLIENTE_HRS,
    (UNIX_TIMESTAMP(f.FINEVALUACION) - UNIX_TIMESTAMP(f.INICIOEVALUACION)) / 3600.0 AS TIEMPO_ANALISTA_HRS
  FROM full_joined f
),
-- 6) Clasificaciones dependientes de métricas previas
clasif AS (
  SELECT
    m.*,
    -- Rango SCORE
    CASE
      WHEN m.NUMPUNTAJEPRECALIF IS NULL OR m.NUMPUNTAJEPRECALIF <= 0 THEN 'SIN DATA'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 1 AND 300   THEN 'A. 1-300'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 301 AND 330 THEN 'B. 301-330'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 331 AND 360 THEN 'C. 331-360'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 361 AND 390 THEN 'D. 361-390'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 391 AND 420 THEN 'E. 391-420'
      WHEN m.NUMPUNTAJEPRECALIF BETWEEN 421 AND 450 THEN 'F. 421-450'
      ELSE NULL
    END AS RANGO_SCORE,
    -- Rango monto solicitado en soles
    CASE
      WHEN m.MTOSOLICITADO_SOLES IS NULL OR m.MTOSOLICITADO_SOLES <= 0 THEN 'SIN DATA'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 1 AND 23000 THEN 'A. 1-23K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 23001 AND 46000 THEN 'B. 23K-46K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 46001 AND 69000 THEN 'C. 46K-69K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 69001 AND 92000 THEN 'D. 69K-92K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 92001 AND 115000 THEN 'E. 92K-115K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 115001 AND 138000 THEN 'F. 115K-138K'
      WHEN m.MTOSOLICITADO_SOLES BETWEEN 138001 AND 160000 THEN 'G. 138K-160K'
      ELSE 'H. >160K'
    END AS RANGO_MTO_SOL_S
  FROM mtr m
),
-- 7) Derivaciones de producto/campaña y estados
final AS (
  SELECT
    c.*,

    -- TIPOEVALUACION
    CASE WHEN c.CODMATRICULACOLABORADORAPROBADOR IS NOT NULL
         THEN 'EVALUACION EN CENTRALIZADO'  -- corrige typo
         ELSE 'EVALUACION AUTOMATICA'
    END AS TIPOEVALUACION,

    -- TIPOPRODUCTO (normalizado por DESCAMPANIA_N y DESTIPFLUJOVENTATARJETACREDITO)
    CASE
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO IN ('EP','PTC','BT','AMPLIACION','UPGRADE','ADICIONAL')
        THEN 'TARJETA CREDITO STOCK'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO IN ('SEGUNDA TC','TC')
        THEN 'TARJETA CREDITO NUEVA'
      WHEN
        INSTR(c.DESCAMPANIA_N, 'PRESTAMO TAR') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'PTC') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'EP') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'BALANCE TRA') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'TC+BT') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'BT') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'AMPLIACION') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'UPGRADE') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'UPG') > 0 OR
        INSTR(c.DESCAMPANIA_N, 'ADICIONAL') > 0
        THEN 'TARJETA CREDITO STOCK'
      ELSE 'SIN DATA'
    END AS TIPOPRODUCTO,

    -- SUBPRODUCTO (respeta reglas originales + normalización EP->PTC, SEGUNDA TC->TC)
    CASE
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO = 'EP'          THEN 'PTC'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO = 'SEGUNDA TC'  THEN 'TC'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO IS NOT NULL     THEN c.DESTIPFLUJOVENTATARJETACREDITO
      WHEN INSTR(c.DESCAMPANIA_N, 'PRESTAMO TAR') > 0 OR INSTR(c.DESCAMPANIA_N, 'PTC') > 0 OR INSTR(c.DESCAMPANIA_N, 'EP') > 0
           THEN 'PTC'
      WHEN INSTR(c.DESCAMPANIA_N, 'BALANCE TRA') > 0 OR INSTR(c.DESCAMPANIA_N, 'TC+BT') > 0 OR INSTR(c.DESCAMPANIA_N, 'BT') > 0
           THEN 'BT'
      WHEN INSTR(c.DESCAMPANIA_N, 'AMPLIACION') > 0 THEN 'AMPLIACION'
      WHEN INSTR(c.DESCAMPANIA_N, 'UPGRADE') > 0 OR INSTR(c.DESCAMPANIA_N, 'UPG') > 0 THEN 'UPGRADE'
      WHEN INSTR(c.DESCAMPANIA_N, 'ADICIONAL') > 0 THEN 'ADICIONAL'
      ELSE 'Sin data'
    END AS SUBPRODUCTO,

    -- RESULTADOANALISTA
    CASE c.TIPESTADOSOLICITUD
      WHEN 'ACPD' THEN 'ACEPTADA'
      WHEN 'DCLD' THEN 'DENEGADA'
      WHEN 'ENPR' THEN 'EN PROCESO'
      WHEN 'IRFC' THEN 'INGRESADO'
      WHEN 'EEEL' THEN 'EN PROCESO DE CALIFICACION'
      WHEN 'DIGI' THEN 'DIGITADO'
      ELSE 'SIN DATA'
    END AS RESULTADOANALISTA,

    -- ESTADO_F
    CASE
      WHEN c.TIPESTADOSOLICITUD = 'ACPD' AND c.DESTIPETAPA = 'CERRADA'    THEN 'ACEPTADA'
      WHEN c.TIPESTADOSOLICITUD = 'DCLD' AND c.DESTIPETAPA = 'RECHAZADA'  THEN 'DENEGADA'
      WHEN c.TIPESTADOSOLICITUD = 'ENPR' AND c.DESTIPETAPA = 'DESESTIMADA'THEN 'DESESTIMADA'
      WHEN c.TIPESTADOSOLICITUD = 'IRFC' AND c.DESTIPETAPA = 'PERDIDA'    THEN 'DESESTIMADA'
      WHEN c.TIPESTADOSOLICITUD = 'ENPR'                                  THEN 'EN PROCESO'
      WHEN c.TIPESTADOSOLICITUD = 'IRFC'                                  THEN 'INGRESADO'
      WHEN c.TIPESTADOSOLICITUD = 'EEEL'                                  THEN 'EN PROCESO DE CALIFICACION'
      WHEN c.TIPESTADOSOLICITUD = 'DIGI'                                  THEN 'DIGITADO'
      ELSE 'SIN DATA'
    END AS ESTADO_F,

    -- CAMPANACORTA
    CASE
      WHEN INSTR(c.DESCAMPANIA_N, '100%') > 0       THEN '100% APROBADO'
      WHEN INSTR(c.DESCAMPANIA_N, 'PREAPR') > 0     THEN 'PREAPROBADO'
      WHEN INSTR(c.DESCAMPANIA_N, 'SIN CAMP') > 0   THEN 'SIN CAMPANIA'
      WHEN INSTR(c.DESCAMPANIA_N, 'INVITA') > 0     THEN 'INVITADO'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO = 'EP'          THEN 'PTC'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO = 'SEGUNDA TC'  THEN 'TC'
      WHEN c.DESTIPFLUJOVENTATARJETACREDITO IS NOT NULL     THEN c.DESTIPFLUJOVENTATARJETACREDITO
      WHEN INSTR(c.DESCAMPANIA_N, 'PRESTAMO TAR') > 0 OR INSTR(c.DESCAMPANIA_N, 'PTC') > 0 OR INSTR(c.DESCAMPANIA_N, 'EP') > 0
           THEN 'PTC'
      WHEN INSTR(c.DESCAMPANIA_N, 'BALANCE TRA') > 0 OR INSTR(c.DESCAMPANIA_N, 'TC+BT') > 0 OR INSTR(c.DESCAMPANIA_N, 'BT') > 0
           THEN 'BT'
      WHEN INSTR(c.DESCAMPANIA_N, 'AMPLIACION') > 0 THEN 'AMPLIACION'
      WHEN INSTR(c.DESCAMPANIA_N, 'UPGRADE') > 0 OR INSTR(c.DESCAMPANIA_N, 'UPG') > 0 THEN 'UPGRADE'
      WHEN INSTR(c.DESCAMPANIA_N, 'ADICIONAL') > 0 THEN 'ADICIONAL'
      ELSE 'SIN DATA'
    END AS CAMPANACORTA
  FROM clasif c
)

SELECT
  -- columnas del SELECT original, respetando su procedencia
  CODSOLICITUD,
  FECREGISTRO,
  TIPOEVALUACION,
  TIPOPRODUCTO,
  SUBPRODUCTO,
  DESPRODUCTO,
  RESULTADOANALISTA,
  ESTADO_F,
  CAST(NULL AS STRING) AS RESULTADOMOTORDCA,       -- no presente en fuentes del FROM original
  DESMOTIVOCDA,
  DESTIPETAPA AS ETAPA,
  CAST(NULL AS STRING) AS JUSTIFICACIONANALISTA,   -- no presente en fuentes del FROM original
  DESCOMENTARIO AS COMENTARIOANALISTA,
  DESCAMPANIA AS CAMPANIA,
  CAMPANACORTA,
  NBRMONEDA AS MONEDA,
  MTOSOLICITADO,
  MTOAPROBADO,
  INICIOEVALUACION,
  FINEVALUACION,
  FECEMISIONTARJETACREDITO AS FECDESEMBOLSO,
  CODMATRICULACOLABORADORAPROBADOR AS MATANALISTA,
  CODMATRICULACOLABORADORVENDEDOR AS MATVENDEDOR,
  CODINTERNOCOMPUTACIONAL,

  CASE WHEN FLGCLIPAGOHABERESBCP IS NOT NULL THEN FLGCLIPAGOHABERESBCP END AS FLGPDH,
  TIPRENTA_TIT   AS TIPRENTATITULAR,
  TIPRENTA_CONY  AS TIPRENTACONYUGE,
  NUMPUNTAJEPRECALIF AS SCOREEVALUACION,
  TIPIDC_TIT     AS TIPIDCTITULAR,
  TIPIDC_CONY    AS TIPIDCCONYUGE,
  ING_BRUTO_TIT  AS INGRESOBRUTOTITULAR,
  ING_BRUTO_CONY AS INGRESOBRUTOCONYUGE,
  OTRO_ING_BRUTO_TIT  AS OTROINGRESOBRUTOTITULAR,
  OTRO_ING_BRUTO_CONY AS OTROINGRESOBRUTOCONYUGE,
  ING_PROM_TIT   AS INGRESOPROMEDIOTITULAR,
  ING_PROM_CONY  AS INGRESOPROMEDIOCONYUGE,

  MTOCUOTAMENSUALAPROBADO,
  CAST(NULL AS BIGINT) AS PLAZOSOLICITADO,
  CAST(NULL AS BIGINT) AS PLAZOAPROBADO,
  PCTTASAEFECTIVAANUALSOLICITUD AS TASASOLICITADA,
  CAST(NULL AS DECIMAL(18,6)) AS TASAAPROBADA,

  CEM,
  CEM_VENDEDOR,
  CEM_ANALISTA,
  SEGMENTO_TIT AS SEGMENTOTITULAR,
  CAST(NULL AS STRING) AS POSICIONCONSOLIDADA,
  SEG_RIESGO_TIT AS SEGMENTORIESGOSTITULAR,
  TIPIDC_CONY    AS SEGMENTORIESGOSCONYUGE,  -- se mantiene la procedencia del original (aunque el alias es confuso)
  CAST(NULL AS DECIMAL(18,2)) AS MTODESEMBOLSADO,

  GRADO_INSTRUCCION AS GRADOINTRUSCCION,
  OCUP_TIT AS SITUACIONLAOBRALTITULAR,
  OCUP_CONY AS SITUACIONLAOBRALCONYUGE,

  CLASIF_SBS_TIT AS CLASIFSBSTITULTAR,
  CLASIF_SBS_CONY AS CLASIFSBSCONYUGE,

  NRO_DEP_TIT AS NUMDEPENDIENTESTITULAR,
  ESTADO_CIVIL,
  FUNCION_VENDEDOR,

  MTOINGRESOBRUTOSOLICITUD AS MTOINGRESOVERIFICADO,

  DAY(FECSOLICITUD)   AS DIASOLICITUD,
  MONTH(FECSOLICITUD) AS MESSOLICITUD,
  YEAR(FECSOLICITUD)  AS ANIOSOLICITUD,
  DATE_FORMAT(FECSOLICITUD, 'yyyyMM') AS CODMESSOLICITUD,

  RANGO_SCORE AS RANGOSCORE,

  MTOSOLICITADO_SOLES AS MTOSOLICITADOSOLES,
  MTOAPROBADO_SOLES   AS MTOAPROBADOSOLES,
  CAST(NULL AS DECIMAL(18,2)) AS MTODESEMBOLSADOSOLES,
  CAST(NULL AS STRING) AS FLGMTODESEMBOLSADOSOLES,

  RANGO_MTO_SOL_S AS RANGOMTOSOLICITADOSOLES,

  (TIEMPO_CLIENTE_SEG / 3600.0)  AS TIEMPOCLIENTEHRS,
  (TIEMPO_ANALISTA_SEG / 3600.0) AS TIEMPOANALISTAHRS,
  TIEMPO_CLIENTE_SEG   AS TIEMPOCLIENTESEGUNDOS,
  TIEMPO_ANALISTA_SEG  AS TIEMPOANALISTASEGUNDOS,

  CASE
    WHEN TIEMPO_CLIENTE_HRS IS NULL       THEN NULL
    WHEN TIEMPO_CLIENTE_HRS <= 0          THEN 'SIN DATA'
    WHEN TIEMPO_CLIENTE_HRS BETWEEN 1 AND 3   THEN 'A. 1-3'
    WHEN TIEMPO_CLIENTE_HRS BETWEEN 4 AND 6   THEN 'B. 4-6'
    WHEN TIEMPO_CLIENTE_HRS BETWEEN 7 AND 12  THEN 'C. 7-12'
    WHEN TIEMPO_CLIENTE_HRS BETWEEN 13 AND 18 THEN 'D. 13-18'
    WHEN TIEMPO_CLIENTE_HRS BETWEEN 19 AND 24 THEN 'E. 19-24'
    ELSE 'F. >24'
  END AS RANGOATENCIONCLIENTE

FROM final;